## What is a Git branch?

- A branch is a pointer to a git commit
- It says "I want to include the work of this commit and all of its parent commits."
- We can use the `checkout` command to switch between different branches and commits
![](images/git_branching_illustration.png)

## Creating a git branch:

![](images/creating_branch_and_checking_out.png){width=40%}

## Creating a git branch and checking it out

- Create a new branch using: `git branch my-shiny-new-branch`
- Checkout the branch using: `git checkout my-shiny-new-branch`
- Make a change in your new branch by editing new.txt and committing the changes.

- Note: you can combine the first two steps into one using `git checkout -b my-shiny-new-branch`

## Switching between branches
<br>
![creating branch and checking out](images/creating_branch_and_checking_out.png){width=35%}

## Switching between branches

- return to the main branch using `git checkout main`
- open the new.txt file, what's inside?
- make a new file, `new_2.txt`
- commit this new file to the main branch
- switch back to your other branch and inspect the files again

- Note: you can use `git checkout -` as a shortcut for returning to the previous branch you checked out.

## Ways of working with a remote repository

A remote repository is one stored in the cloud. We will be using GitHub to do this today. \
There are two different ways to copy a remote repository so that you can work on it locally:
<br>
<br>
- clone:  This makes a copy locally which is linked to the remote version.
Your local branches can be synced to branches in the original.
<br>
<br>
- fork: This makes another separate version of the repo remotely that you own. Once you
have forked a repo remotely, you can then clone it to your local machine. You can still contribute to the original repository through a pull request.
<br>
<br>

## To clone or to fork?

Use a clone when:

- You are collaborating directly and actively with the owner of the repo (e.g. it is your research team, or you)
OR all of the following is true:

- It is owned by someone else and you are happy not to have ownership of the codebase
- You have permission to push branches up to the repo
- You want easy access to the latest changes made by others to the central repository
- You want the main branch in the repo to be updated and edited by others working on the project


