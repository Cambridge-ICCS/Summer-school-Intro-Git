---
title: "<span style='color: white;'>Git for beginners</span>"
subtitle: "<span style='color: white;'>... *or how I learned to stop worrying and love version control*</span>"
author: "<span style='color: white;'>James Emberton, Amy Pike and Marion Weinzierl</span>"
format:
    revealjs:
        title-slide-attributes: 
            data-background-image: images/ICCS_title_slide.png
        incremental: true
        auto-stretch: true
        data-background-image: images/ICCS_content_slide.png
---

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 100px;", size = "18">
First! A few questions about Git and Github
</div>
::: {.incremental}
- Who has used any sort of code version control before?
- Who has used Git or Github
- Who wants to do better version control in their projects?
:::

::: {.fragment}

::: {.callout-tip title="Version Control"}
Tools like Git and Github exist as solutions to the problem of how to save, share, and collaborate in a structured and safe way.

Useful whether you are working alone or in a team!
:::
:::
## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 100px;", size = "18">
Why Git?
</div>
::: {.incremental}
- Distributed version control
- Lightweight but powerful branching and merging
- High performance/Scalable
- Excellent data integrity protection
- Open source with a rich ecosystem, flexible and customisable
- Fine grained control over committing, viewing history and reverting
:::

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 100px;", size = "18">
In today's course we will:
</div>
- Create a local git repository
- Create a git commit in your repository
- Create a git branch in your repository
- Fork a remote repository and check it out on your local machine

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 100px;", size = "18">
What is a Git repository?
</div>
 - A place where you can store your code, your files, and each file's revision history.
 - Contains a .git folder at the root which does all the git magic behind the scenes.

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 80px;", size = "16">
Exercise 1a, creating a git repository:
<br>- Navigate to a folder you want to work in, and create a new folder to contain your repository:
</div>
<div style="background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ cd your_dir
$ mkdir your_folder
$ cd your_folder
</code></pre>
</div>
Then initialise the folder
<div style="background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git init
</code></pre>
</div>
::: {.callout-tip title=".git"}
A hidden ".git" folder has been created in your folder. This contains everything Git needs to work.
:::

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 100px;", size = "18">
What is a Git commit?
</div>
- You can think of a commit as a snapshot of your work at a particular time
- You can navigate between commits easily with git
- This allows you to switch easily between different versions of your work
- When you commit, rather than saving all the files in a project every time, git is efficient
and only stores the files which have been changed between the previous commit and your current one

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 100px;", size = "18">
What is the staging area?
</div>
-
- git will only track the files you tell it to.

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px;", size = "16">
Exercise 1b, create an untracked file:
<br>- Create a new file and save it in git.
</div>

<div style="background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ touch new.txt
$ code new.txt
</code></pre>
</div>
<br>
Lets check what git can see...
<div style="background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git status
</code></pre>
</div>

## {data-background-image=images/ICCS_content_slide.png}
<div style="margin-top: 85px; background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git status

On branch main

No commits yet

Untracked files:
   (use "git add <file>..." to include in what will be committed)

	new.txt

nothing added to commit but untracked files present (use "git add" to track)
</code></pre>
</div>

::: {.callout-tip title="git status"}
Highlights your working branch -> main
<br> Reports commit status -> none yet
<br>Highlights untracked files -> new.txt
<br>Proposes adding these to git with 'git add'
:::

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 80px;", size = "16">
Exercise 2, add the untracked file to the staging area:
<br> Try these commands...
</div>
<div style="margin-top: 85px; background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git add .
</code></pre>
</div>
<br>
<div style="margin-top: 85px; background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git status

</code></pre>
</div>


## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px; background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git status

On branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   new.txt

</code></pre>
</div>

::: {.callout-tip title="git add"}
Moves file(s) into "Staging area" ready for commit
<br>
:::

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px;", size = "16">
Exercise 3, commiting your changes:
<br>- Commit your file to the local git repo
</div>
<div style="margin-top: 85px; background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git commit -m "Created new.txt"

</code></pre>
</div>

'git commit' >>>> tells git you want to commit
<br>
<br>'-m "Comment"' >>>> adds a description to the log for this commit. This is important as it tells you and others what the commit intent is.

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px; background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git commit -m "Created new.txt"

[main (root-commit) f22b25e] Created new.txt
 1 file changed, 1 insertion(+)
 create mode 100644 new.txt

</code></pre>
</div>

<div style="margin-top: 85px; background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git status

On branch main
nothing to commit, working tree clean

</code></pre>
</div>

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px; background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git log

commit f22b25e3233b4645dabd0d81e651fe074bd8e73b
Author: James Emberton <je484@cam.ac.uk>
Date:   Tues May 27 09:51:46 2024 -0400

    Create new.txt

</code></pre>
</div>

::: {.callout-tip title="git log"}
Displays commits in reverse chronological order.

Includes full identifier, author and date
:::
## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px;", size = "16">
Exercise 4, creating a git branch and checking it out
</div>

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px;", size = "16">
Exercise 5, switching between branches
</div>

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px;", size = "16">
Working with your own github repo
</div>
::: {.callout-warning}
You must have already created a github account and connected your local git repo to it before you can do these exercises
:::

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px;", size = "16">
Exercise 6, forking a repo from GitHub
</div>

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 85px;", size = "16">
Collaborative git with GitHub
</div>

::: {.callout-warning}
You must have already created a github account and connected your local git repo to it before you can do these exercises
:::

Navigate to www.github.com/j-emberton and find the 'Intro-to-Github' repo

We will fork this repo to our local computers, make edits and then try merging these back into the original repo.

## {data-background-image=images/ICCS_content_slide.png}

<div style="margin-top: 100px;", size = "18">
Exercise 7:
<br> - From Github, Fork j-emberton/Intro-to-Github
</div>

:::: {.columns}

::: {.column width="40%"}
![Github Fork option](images/Github%20fork.png)
:::

::: {.column width="60%"}
![Fork menu](images/Fork%20menu.png)
:::

::::

## {data-background-image=images/ICCS_content_slide.png}
<div style="margin-top: 100px;", size = "18">
Your forked repo only exists in Github. To work on it locally it needs to be copied to your local computer.
</div>

<div style="background-color: black; color: white; padding: 10px; border-radius: 5px; font-family: monospace;">
<pre><code>
$ git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
</code></pre>
</div>

::: {.callout-warning}
Clone repo to a new working folder.

Do not clone into an existing local git repo.
:::

Choose/create a file to edit, and then commit, and then push the changes to your remote github repo.

## {data-background-image=images/ICCS_content_slide.png}
<div style="margin-top: 100px;", size = "18">
The final step is to put in a pull request (PR) to the original repo that we forked from.
<br>
A pull request is how we signal to the repo owner that we want to merge in our changes.

<br>

<br>
Depending on the code and the repo, you may not be able to merge directly.
<br>Reviews by one or more developers who may suggest/require edits to you code
<br>Pass testing
</div>




## {data-background-image=images/ICCS_content_slide.png}


